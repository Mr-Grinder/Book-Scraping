import undetected_chromedriver as uc
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from urllib.parse import urljoin
import time
import csv
import os


CSV_FILE = "boks_urls.csv"

if not os.path.exists(CSV_FILE):
    with open(CSV_FILE, "w", newline="") as f:
        writer = csv.writer(f)
        writer.writerow(["URL"])

# –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –≤–∂–µ –∑—ñ–±—Ä–∞–Ω—ñ URL, —â–æ–± –Ω–µ –¥—É–±–ª—é–≤–∞—Ç–∏
all_urls = set()
with open(CSV_FILE, newline="") as f:
    reader = csv.reader(f)
    next(reader)
    for row in reader:
        all_urls.add(row[0])


# 2. –ó–ê–ü–£–°–ö –ë–†–ê–£–ó–ï–†–ê
options = uc.ChromeOptions()
options.add_argument("--start-maximized")
driver = uc.Chrome(options=options)
wait = WebDriverWait(driver, 10)

driver.get("https://books.toscrape.com/")
time.sleep(2)  
# 3. –û–¢–†–ò–ú–ê–ù–ù–Ø –ñ–ê–ù–†–Ü–í
genre_links = []
genres = driver.find_elements(By.CSS_SELECTOR, "ul.nav-list ul li a")

for g in genres:
    href = g.get_attribute("href")
    full_url = urljoin("https://books.toscrape.com/", href)
    genre_links.append(full_url)

print(f"üîé –ó–Ω–∞–π–¥–µ–Ω–æ –∂–∞–Ω—Ä—ñ–≤: {len(genre_links)}")

# 4. –û–ë–•–Ü–î –ñ–ê–ù–†–Ü–í –Ü –ó–ë–Ü–† –ö–ù–ò–ñ–û–ö
for genre_url in genre_links:
    driver.get(genre_url)
    print(f"\nüìö –û–±—Ä–æ–±–∫–∞ –∂–∞–Ω—Ä—É: {genre_url}")

    while True:
        try:
            wait.until(EC.presence_of_all_elements_located((By.CLASS_NAME, "product_pod")))
            books = driver.find_elements(By.CSS_SELECTOR, "h3 a")

            new_links = []

            for book in books:
                href = book.get_attribute("href")
                full_url = urljoin(driver.current_url, href)
                if full_url not in all_urls:
                    all_urls.add(full_url)
                    new_links.append(full_url)

            # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –≤ CSV
            if new_links:
                with open(CSV_FILE, "a", newline="") as f:
                    writer = csv.writer(f)
                    for link in new_links:
                        writer.writerow([link])

            print(f"‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ {len(new_links)} –Ω–æ–≤–∏—Ö –∫–Ω–∏–≥ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ.")

            # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ –∫–Ω–æ–ø–∫–∏ next
            try:
                next_btn = driver.find_element(By.CLASS_NAME, "next")
                next_href = next_btn.find_element(By.TAG_NAME, "a").get_attribute("href")
                next_url = urljoin(driver.current_url, next_href)
                driver.get(next_url)
                time.sleep(2)
            except:
                print("üîö –ñ–∞–Ω—Ä –∑–∞–≤–µ—Ä—à–µ–Ω–æ (–Ω–µ–º–∞—î –Ω–∞—Å—Ç—É–ø–Ω–æ—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏)")
                break

        except Exception as e:
            print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å –æ–±—Ä–æ–±–∫–∏ —Å—Ç–æ—Ä—ñ–Ω–∫–∏: {e}")
            break
        
driver.quit()
print(f"\nüéâ –ì–æ—Ç–æ–≤–æ! –ó–∞–≥–∞–ª–æ–º –∑—ñ–±—Ä–∞–Ω–æ {len(all_urls)} —É–Ω—ñ–∫–∞–ª—å–Ω–∏—Ö –∫–Ω–∏–∂–∫–æ–≤–∏—Ö URL.")
